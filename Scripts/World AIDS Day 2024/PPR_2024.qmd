---
title: "PPR 2024"
author: "Karishma Srikanth"
format: html
editor: visual
execute:
  echo: false
  output: false
---

# PPR 2024

```{r libraries}

knitr::opts_chunk$set(echo = FALSE)

  library(tidyverse)
  library(glitr)
  library(glamr)
  library(gophr)
  library(extrafont)
  library(scales)
  library(tidytext)
  library(patchwork)
  library(ggtext)
  library(glue)
  library(janitor)
  library(lubridate)
  library(googlesheets4)
```

```{r load}

# SI specific paths/functions  
load_secrets()

# MSD
filepath <- si_path() %>% 
  return_latest("MER_Structured_Datasets_OU_IM_FY22")

# Grab metadata
metadata <- get_metadata(filepath) 

# MSD PREP --------------------------------------

#read MSD
df_msd <- read_psd(filepath)


#LOCAL PARTNER DATA PREP --------------------------------------------------------

#Read in the google sheet hyperfile with local partner
sheet_id <- "1tGk1TR8l3WacR8qMIK0AQvFynABijAaLHeIctE1nUoM"

df_partner <- read_sheet(sheet_id, sheet = "MechID-PartnerType") %>% 
  janitor::clean_names() %>% 
  select(mechanism_id, pepfar_local_partner_status) %>% 
  rename(mech_code = mechanism_id,
         partner_type = pepfar_local_partner_status) %>% 
  mutate(mech_code = as.character(mech_code))
         # ,
         # partner_type = case_when(partner_type == "Regional" ~ "Local",
         #                          partner_type == "TBD Local" ~ "Local", TRUE ~ partner_type))


# DREAMS DATA PREP --------------------------------------------------------------

# Google sheet ID for DREAMS DSNU list
dsnu_g_id <- "1oJZyXtvExN9UoQ6krFHERMoXEgCQgsHLf0tVIbmsi_o"

#MSD path
dsnu_msd_path <- si_path() %>% 
  return_latest("PSNU_IM_DREAMS_FY22")

#import DREAMS DSNU crosswalk
#recommend adding psnu_uids to this sheet
dsnu_list <- read_sheet(dsnu_g_id, sheet = "DSNU-Agency-All-FY") %>% 
  janitor::clean_names() %>% 
  select(ou, cop22_psnu, dreams_dsnu, cop_23_fy24_implementing_agency)

#rename names
names(dsnu_list)<-c("operatingunit", "psnu", "dsnu", "agencies_FY24")

#import msd and filter to current year
df_msd_dreams <- read_psd(dsnu_msd_path) %>% 
  filter(fiscal_year == metadata$curr_fy)

msd_dsnu_xwalk <- df_msd_dreams %>% 
  count(operatingunit, operatingunituid, psnu, psnuuid, cop22_psnu, cop22_psnuuid, dsnu, dsnuuid) %>% 
  mutate(raised_lvl = ifelse(psnuuid != cop22_psnuuid, TRUE, FALSE)) %>% 
  mutate(dsnu_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnu,
                              TRUE ~ dsnu),
         dsnuuid_new = case_when(operatingunit != "Uganda" & raised_lvl == TRUE ~ cop22_psnuuid,
                                 TRUE ~ dsnuuid))

#join the new xwalk back to msd and then join the internal dsnu list to the msd
df_dreams_all <- df_msd_dreams %>% 
  left_join(msd_dsnu_xwalk) %>% 
  left_join(dsnu_list, by=c("operatingunit", "cop22_psnu" = "psnu", "dsnu_new"= "dsnu"))

# HRH -----------------------------------------------------------------------

df_hrh <- si_path() %>% 
  return_latest("HRH") %>% 
  read_psd()

# UNAIDS --------------------------------------------------------------------

Sys.unsetenv("GITHUB_PAT")
df_tt <- mindthegap::pull_testtreat(TRUE)

```

```{r functions}
# FUNCTIONS --------------------------------------------------------------------

#clean number function
clean_number <- function(x, digits = 0){
  dplyr::case_when(x >= 1e9 ~ glue("{round(x/1e9, digits)} billion"),
                   x >= 1e6 ~ glue("{round(x/1e6, digits)} million"),
                   x >= 1e3 ~ glue("{round(x/1e3, digits)} thousand"),
                   TRUE ~ glue("{x}"))
}


#LP Function
#result_type = value or share
grab_lp_results_clean <- function(df, indic, result_type) {
  
  df_munge <- suppressMessages(df %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value %>% clean_number(1),#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type)
  
  return(title_info_lp)
}

grab_lp_results <- function(df, indic, result_type) {
  
  df_munge <- suppressMessages(df %>% 
                                 # bind_rows(df_arch) %>%
                                 left_join(df_partner, by = c("mech_code")) %>%
                                 filter(funding_agency == "USAID",
                                        indicator == indic,
                                        standardizeddisaggregate == "Total Numerator") %>% 
                                 group_by(funding_agency, fiscal_year, indicator, partner_type) %>% 
                                 summarise(across(cumulative, sum, na.rm = TRUE)) %>%
                                 ungroup() %>% 
                                 filter(partner_type != "TBD") %>%
                                 #filter(fiscal_year != 2022) %>%
                                 pivot_wider(names_from = partner_type, values_from = cumulative) %>%
                                 group_by(fiscal_year) %>%
                                 mutate(Total = International + Local,
                                        share = Local / Total)  %>%
                                 pivot_longer(cols = International:Total, names_to = "partner_type"))
  
  title_info_lp <- df_munge %>% 
    filter(partner_type == "Local", fiscal_year == metadata$curr_fy) %>% 
    select(fiscal_year, indicator, value, share) %>% 
    mutate(
      value = value,#change to 1 if you want 1 decimal accuracy
      share = percent(round(share, 2))) %>% 
    pull(result_type) 
  
  return(title_info_lp)
}

#key pops function clean
pull_kp_clean <- function(df, indic) {
  kp_val <- df %>%
    filter(funding_agency == "USAID",
           str_detect(standardizeddisaggregate, "KeyPop(?!\\/Status)"),
           indicator %in% c("PrEP_NEW", "TX_CURR", "KP_PREV"),
           fiscal_year == metadata$curr_fy) %>%
    count(indicator, wt = cumulative) %>%
    mutate(n = clean_number(n)) %>% 
    pivot_wider(names_from = indicator, values_from = "n") %>% 
    pull(indic)
  
  return(kp_val)
}

#key pops function complete
pull_kp <- function(df, indic) {
  kp_val <- df %>%
    filter(funding_agency == "USAID",
           str_detect(standardizeddisaggregate, "KeyPop(?!\\/Status)"),
           indicator %in% c("PrEP_NEW", "TX_CURR", "KP_PREV"),
           fiscal_year == metadata$curr_fy) %>%
    count(indicator, wt = cumulative) %>%
    pivot_wider(names_from = indicator, values_from = "n") %>% 
    pull(indic) 
  
  return(kp_val)
}

```

## **1. Analysis of Mission Objective Performance:  (3,491/3,500)**

### Epi Updates (Gina)

```{r usaid_cntry_count}

usaid_countries <- df_msd %>% 
  filter(fiscal_year == metadata$curr_fy,
         funding_agency == "USAID") %>% 
  count(country) %>% 
  nrow()
```

```{r unaids_95}

unaids_yr <- df_tt %>% 
  filter(year == max(year)) %>% 
  pull(year) %>% unique()

##Progress toward 90-90-90 
    df_rel_lim <- df_tt %>% 
      filter(year == max(year),
             indicator %in% c("Percent Known Status of PLHIV",
                              "Percent on ART with Known Status",
                              "Percent VLS on ART"), #using rel base indicators
             age == "All",
             sex == "All") %>% 
      select(year, country, indicator, estimate, lower_bound, upper_bound, achv_95_relative, pepfar)
    
    num_achv_90s <- df_rel_lim %>% 
      filter(pepfar == TRUE) %>% 
      mutate(
        goal_rate = 90, #use 90 as the goal metric for each indicator
        achieved = estimate >= goal_rate) %>% 
       group_by(country) %>% 
        summarise(all_achieved = all(achieved), .groups = 'drop') %>% 
        filter(all_achieved) %>% 
        n_row()
# 
# achv_95_cntry <- df_tt %>% 
#   filter(year == max(year),
#          achv_95_plhiv == TRUE,
#          achv_95_relative == TRUE,
#        #  indicator == "Percent VLS on ART",
#          age == "All",
#          sex == "All") %>% 
#   count(country) %>% 
#   nrow()
```

In **`r metadata$curr_fy_lab`**, the Bureau for Global Health’s (GH) Office of HIV/AIDS (OHA) supported **`r usaid_countries`** host countries in successfully implementing PEPFAR-supported HIV prevention, care and treatment programs that are based on country context, epidemiology and leverage data from diverse sources to focus the response. GH continued to accelerate the global HIV response and contributed to achieving the UNAIDS 95-95-95 goals, where 95 percent of people living with HIV (PLHIV) know their status, 95 percent of people who know their HIV status are on antiretroviral therapy (ART), and 95 percent of people on ART are virally suppressed. In **`r unaids_yr`,** **`r num_achv_90s`** PEPFAR-supported countries were close to achieving the 95-95-95 targets.

### Program highlights along the clinical cascade and Primary Prevention (Gina)

```{r}

fy24_hts_pos <- df_msd %>% 
  filter(funding_agency == "USAID",
         fiscal_year == metadata$curr_fy,
         indicator %in% c("HTS_TST_POS"),
         standardizeddisaggregate == "Total Numerator") %>% 
  group_by(fiscal_year, funding_agency, indicator) %>% 
  summarize(across(cumulative, \(x) sum(x, na.rm = TRUE)),.groups="drop")  %>% 
  pull(cumulative)

fy24_hts_self <- df_msd %>% 
  filter(funding_agency == "USAID",
         fiscal_year == metadata$curr_fy,
         indicator %in% c("HTS_SELF"),
         standardizeddisaggregate == "Total Numerator") %>% 
  group_by(fiscal_year, funding_agency, indicator) %>% 
  summarize(across(cumulative, \(x) sum(x, na.rm = TRUE)),.groups="drop")  %>% 
  pull(cumulative)

fy24_txcurr <- df_msd %>% 
  filter(funding_agency == "USAID",
         fiscal_year == metadata$curr_fy,
         indicator == "TX_CURR",
         standardizeddisaggregate == "Total Numerator") %>% 
  group_by(fiscal_year, funding_agency, indicator) %>% 
  summarize(across(cumulative, \(x) sum(x, na.rm = TRUE)),.groups="drop")  %>% 
  pull(cumulative)

```

```{r ovc}
ovc_serv_val <- df_msd %>% 
  filter(indicator %in% c("OVC_SERV"),
         standardizeddisaggregate %in% c("Total Numerator"),
         #  trendscoarse == "<18",
         fiscal_year == metadata$curr_fy,
         funding_agency == "USAID") %>% 
  summarise(across(starts_with("cumulative"), sum, na.rm = T)) %>% 
  pull(cumulative)
```

```{r dreams}

# DREAMS ----------------------------------------------------------

#For total DREAMS programming, use all 4 disaggs + ages 10-29
viz_package <- df_dreams_all %>%
  filter(indicator=="AGYW_PREV",
         standardizeddisaggregate %in% c("Age/Sex/Time/Complete+",
                                         "Age/Sex/Time/Complete",
                                         "Age/Sex/Time/Started",
                                         "Age/Sex/Time/Incomplete"),
         numeratordenom=="D",
         age_2019 %in% c("10-14","15-19","20-24","25-29"),
         sex=="Female")

#service type disagg
viz_service<- df_dreams_all %>% filter(indicator=="AGYW_PREV", 
                                       standardizeddisaggregate %in% c("ComprehensiveEconomicStrengthening",
                                                                       "EducationSupport"),
                                       numeratordenom=="D")

#create shares by USAID and non-USAID contributing DSNUs
dreams_overall_val <- viz_package %>% 
  mutate(usaid_dsnu = ifelse(str_detect(agencies_FY24, "USAID"), "USAID", "non-USAID")) %>% 
  group_by(indicator, fiscal_year, usaid_dsnu) %>% 
  summarize(across(cumulative, \(x) sum(x, na.rm = TRUE)),.groups="drop") %>% 
  pivot_wider(names_from = "usaid_dsnu", values_from = 'cumulative') %>% 
  mutate(total = USAID + `non-USAID`,
         usaid_share = USAID/total) %>% 
  pull(USAID) 

dreams_overall_val_clean <- dreams_overall_val %>% 
  clean_number(1)
```

```{r kp}

fy24_kp_prev <- df_msd %>% 
  filter(indicator == "KP_PREV",
         standardizeddisaggregate == "Total Numerator",
         fiscal_year == metadata$curr_fy,
         funding_agency == "USAID") %>% 
  group_by(fiscal_year, funding_agency, indicator) %>% 
    summarize(across(cumulative, \(x) sum(x, na.rm = TRUE)),.groups="drop")  %>% 
  pull(cumulative)

kp_txcurr <- pull_kp(df_msd, "TX_CURR")
```

In **`r metadata$curr_fy_lab`**, USAID distributed **`r comma(fy24_hts_self)`** self-test kits, identified over **`r comma(fy24_hts_pos)`** people living with HIV (PLHIV) through facility and community-based HIV counseling and testing services and ensured more than **`r comma(fy24_txcurr)`** PLHIV received life-saving HIV treatment. GH investments have strengthened host country health systems that drive responsive, resilient, and enduring health care through more than ***10,000 HIV testing sites, more than 9,000 HIV treatment sites, and over 3,000 sites*** that provide lab-based or point-of-care testing, making critical services accessible in over ***50*** countries.

In **`r metadata$curr_fy_lab`**, USAID supported nearly **`r comma(ovc_serv_val)`** orphans and vulnerable children and their families affected by HIV through comprehensive services related to economic strengthening, education, and HIV care. USAID reached nearly **`r comma(dreams_overall_val)`** adolescent girls and young women, ages 10-29 years, with HIV prevention services. Additionally, USAID supported more than **`r comma(fy24_kp_prev)`** members of key populations at increased risk of HIV acquisition–with HIV prevention services and supportive interventions and more than **`r comma(kp_txcurr)`** key populations living with HIV with life-saving HIV medication.

## Collaborations - Health Workforce and healthcare worker mental health (Diana F)

```{r hrh_total}


hrh_tp <- df_hrh %>% 
  filter(funding_agency == "USAID",
         #str_detect(er_category, "HCW"),
         fiscal_year == metadata$curr_fy) %>% 
  group_by(fiscal_year, funding_agency, er_category) %>% 
  summarize(across(individual_count, \(x) sum(x, na.rm = TRUE)),.groups="drop") %>% 
  pivot_wider(names_from = er_category, values_from = individual_count) %>% 
  mutate(total = `HCW: Ancillary`+`HCW: Clinical`+`Implementing Mechanism Program Management Staff`+`Other Staff`,
         HCW = `HCW: Ancillary`+`HCW: Clinical`) %>% 
  select(-c(3:4)) %>% 
  pivot_longer(cols = c(3:4, 6), names_to = 'er_category') %>% 
  mutate(share = value / total) %>% 
  select(fiscal_year, funding_agency, er_category, value, total, share) %>% 
  arrange(desc(share))

total_hrh <- hrh_tp %>% 
  pull(total) %>% unique()

hcw_share <- hrh_tp %>% 
  filter(er_category == "HCW") %>% 
  pull(share)

hcw_value <- hrh_tp %>% 
  filter(er_category == "HCW") %>% 
  pull(value)
```

In **`r metadata$curr_fy_lab`**, USAID supported over **`r comma(total_hrh)`** staff, of whom over **`r scales::percent(hcw_share)`** **`r (comma(hcw_value))`** were health workers directly delivering high-quality services required for HIV programs.

## Collaboration with UNAIDS, Global Fund, GHSD, WHO, and other multilateral and regional organizations, and PPPs to sustain the global HIV response., sustainable financing (Lisa, Bernadette, etc)

```{r local_partner}

hts_lp_value_clean <- grab_lp_results_clean(df_msd, "HTS_TST", "value")
hts_lp_value <- grab_lp_results(df_msd, "HTS_TST", "value")

txcurr_lp_value_clean <- grab_lp_results_clean(df_msd, "TX_CURR", "value")
txcurr_lp_value <- grab_lp_results(df_msd, "TX_CURR", "value")
txcurr_lp_share <- grab_lp_results(df_msd, "TX_CURR", "share")
```

GH collaborated with several multilateral and regional partners, including UNAIDS, Global Fund, WHO, and the African Union as well as bilateral partners and the USG interagency, and additional multilateral and bilateral partners to advance local and regional leadership, galvanize host governments to reach national and global targets, and foster the sustainability of USAID HIV programming. In FY2023, USAID HIV programs funded 175 local partners, representing 58% (\$916 million) of USAID HIV mission programming (excluding supply chain funding). USAID-supported local partners helped more than **`r hts_lp_value_clean` \[`r comma(hts_lp_value)`\]** to learn their HIV status and provided nearly **`r txcurr_lp_value_clean` \[`r comma(txcurr_lp_value)`\]** people with life-saving HIV medication, reaching more than **`r txcurr_lp_share`** of all USAID-supported people on HIV treatment.

## Innovation and prevention choice (Emily D & Vincent)

```{r prevention}

prep_val <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Total Numerator"),
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy) %>%
  summarise(across(starts_with("cumulative"), sum, na.rm = T)) %>% 
  pull(cumulative)

prep_val_clean <- prep_val %>%
  clean_number(2)

vmmc_val <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Total Numerator"),
         indicator %in% c("VMMC_CIRC"),
         fiscal_year == metadata$curr_fy) %>%
  summarise(across(starts_with("cumulative"), sum, na.rm = T)) %>% 
  pull(cumulative)

vmmc_val_clean <- vmmc_val %>%
  clean_number(2)
```

```{r prep_cab_la}

prep_cab_la <- df_msd %>%
  filter(funding_agency == "USAID",
         standardizeddisaggregate %in% c("Type"),
         otherdisaggregate == "PrEP Type - Injectable",
         indicator %in% c("PrEP_NEW"),
         fiscal_year == metadata$curr_fy) %>% 
group_by(fiscal_year, funding_agency, indicator, standardizeddisaggregate) %>% 
summarise(across(starts_with("cumulative"), sum, na.rm = T)) %>% 
pull(cumulative)
```

In **`r metadata$curr_fy_lab`**, USAID initiated nearly **`r prep_val_clean` \[`r comma(prep_val)`\]** people on pre-exposure prophylaxis (PrEP), completed nearly over **`r vmmc_val_clean` \[`r comma(vmmc_val)`\]** voluntary medical male circumcisions, and procured and distributed over 287 million condoms and 32.8 million pieces of personal lubricants to persons at-risk, globally. USAID also supported key advances in long-acting HIV prevention technologies, rolling out the first-ever long-acting PrEP injectable, cabotegravir (CAB-LA), in programs in FY24. USAID supported **five** countries to begin implementation of CAB-LA, totalling nearly **`r prep_cab_la`** clients initiating PrEP using CAB-LA, with over ***2000*** additional clients continuing to use PrEP, with CAB-LA as their prevention method of choice. USAID will continue to scale CAB-LA programming, including launch in additional PEPFAR countries, and prepare for additional new prevention products currently in the pipeline client-centered implementation science and research .
